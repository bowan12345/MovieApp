@model ShoppingCart

<!-- Main Form Container -->
<form method="post">
    <div class="card shadow border-0 mt-4">
        <!-- Card Header with Movie Title -->
        <div class="card-header bg-dark bg-gradient text-light py-4">
            <div class="row align-items-center">
                <div class="col">
                    <h2 class="text-light mb-0">@Model.Movie.Name</h2>
                    <p class="mb-0 text-light opacity-75">Directed by @Model.Movie.Director</p>
                </div>
                <div class="col-auto">
                    <span class="badge bg-warning text-dark fs-6">@Model.Movie.Rating ⭐</span>
                </div>
            </div>
        </div>

        <!-- Card Body -->
        <div class="card-body">
            <div class="row">
                <!-- Movie Image -->
                <div class="col-12 col-lg-3 pb-5">
                    <div class="text-center">
                        <img src="@Model.Movie.ImageUrl" class="card-img-top rounded shadow" alt="@Model.Movie.Name" style="max-height: 400px; object-fit: cover;">
                    </div>
                </div>

                <!-- Movie Details -->
                <div class="col-12 col-lg-9">
                    <div class="row">
                        <!-- Movie Information -->
                        <div class="col-12 col-md-8">
                            <div class="movie-info mb-4">
                                <h4 class="text-primary mb-3">Movie Information</h4>
                                <ul class="list-unstyled">
                                    <li class="mb-2"><strong>Category:</strong> <span class="badge bg-secondary">@Model.Movie.Category.Name</span></li>
                                    <li class="mb-2"><strong>Duration:</strong> @Model.Movie.Duration minutes</li>
                                    <li class="mb-2"><strong>Release Year:</strong> @Model.Movie.ReleaseYear</li>
                                    <li class="mb-2"><strong>Rating:</strong> @Model.Movie.Rating/10</li>
                                </ul>

                                @if (!string.IsNullOrEmpty(Model.Movie.Description))
                                {
                                    <div class="mt-3">
                                        <h5>Description</h5>
                                        <p class="text-muted">@Model.Movie.Description</p>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Pricing Information -->
                        <div class="col-12 col-md-4">
                            <div class="pricing-card bg-light p-3 rounded shadow-sm">
                                <h5 class="text-center mb-3">Ticket Pricing</h5>
                                <ul class="list-unstyled text-center">
                                    <li class="mb-2">
                                        <strong>1-5 tickets:</strong>
                                        <span class="text-success fs-5">$@Model.Movie.Price.ToString("0.00")</span>
                                    </li>
                                    <li class="mb-2">
                                        <strong>6-10 tickets:</strong>
                                        <span class="text-success fs-5">$@Model.Movie.Price5.ToString("0.00")</span>
                                    </li>
                                    <li class="mb-2">
                                        <strong>10+ tickets:</strong>
                                        <span class="text-success fs-5">$@Model.Movie.Price10.ToString("0.00")</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Movie Trailer Section -->
            @if (!string.IsNullOrEmpty(Model.Movie.YoutubeId))
            {
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="trailer-section">
                            <h4 class="text-primary mb-3">
                                <i class="bi bi-play-circle-fill"></i> Movie Trailer
                            </h4>
                            <div class="ratio ratio-16x9">
                                <iframe src="https://www.youtube.com/embed/@Model.Movie.YoutubeId"
                                        title="@Model.Movie.Name Trailer"
                                        allowfullscreen
                                        class="rounded shadow">
                                </iframe>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Like/Dislike Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="rating-section bg-light p-4 rounded shadow-sm">
                        <h4 class="text-primary mb-3">
                            <i class="bi bi-heart-fill"></i> Rate this Movie
                        </h4>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="d-flex align-items-center gap-3 mb-3">
                                <button type="button" id="likeBtn" class="btn btn-outline-success d-flex align-items-center gap-2" onclick="voteMovie(@Model.MovieId, true)">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                    <span id="likeCount">@Model.Movie.LikeCount</span>
                                    <span class="d-none d-sm-inline">Like</span>
                                </button>

                                <button type="button" id="dislikeBtn" class="btn btn-outline-danger d-flex align-items-center gap-2" onclick="voteMovie(@Model.MovieId, false)">
                                    <i class="bi bi-hand-thumbs-down-fill"></i>
                                    <span id="dislikeCount">@Model.Movie.DislikeCount</span>
                                    <span class="d-none d-sm-inline">Dislike</span>
                                </button>
                            </div>

                            <div id="voteMessage" class="alert d-none"></div>
                        }
                        else
                        {
                            <div class="d-flex align-items-center gap-3 mb-3">
                                <div class="btn btn-outline-success disabled d-flex align-items-center gap-2">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                    <span>@Model.Movie.LikeCount</span>
                                    <span class="d-none d-sm-inline">Likes</span>
                                </div>

                                <div class="btn btn-outline-danger disabled d-flex align-items-center gap-2">
                                    <i class="bi bi-hand-thumbs-down-fill"></i>
                                    <span>@Model.Movie.DislikeCount</span>
                                    <span class="d-none d-sm-inline">Dislikes</span>
                                </div>
                            </div>

                            <div class="alert alert-info mb-0">
                                <i class="bi bi-info-circle"></i>
                                Please <a asp-area="Identity" asp-page="/Account/Login" class="alert-link">login</a> to rate this movie.
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Purchase Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="purchase-section bg-primary bg-gradient text-white p-4 rounded shadow">
                        <h4 class="mb-3">
                            <i class="bi bi-cart-plus-fill"></i> Get Your Tickets
                        </h4>

                        <div class="row align-items-end">
                            <div class="col-12 col-md-6 col-lg-4 mb-3">
                                <label asp-for="Count" class="form-label fw-bold">Number of Tickets</label>
                                <input asp-for="Count" class="form-control form-control-lg" min="1" max="50" />
                                <span asp-validation-for="Count" class="text-warning"></span>
                            </div>

                            <div class="col-12 col-md-6 col-lg-4 mb-3">
                                <div class="ticket-total">
                                    <small class="text-white-50">Total Price</small>
                                    <div class="fs-4 fw-bold" id="totalPrice">$@Model.Movie.Price.ToString("0.00")</div>
                                </div>
                            </div>

                            <div class="col-12 col-lg-4 mb-3">
                                <button type="submit" class="btn btn-warning btn-lg w-100 fw-bold">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden Fields -->
    <input hidden asp-for="MovieId" />
</form>

<script>
    // Set initial button states based on user's vote
    document.addEventListener('DOMContentLoaded', function() {
    @if (User.Identity.IsAuthenticated && ViewBag.UserVote != null)
    {
        <text>
                var userVote = @Json.Serialize(ViewBag.UserVote);
                updateButtonStates(userVote);
        </text>
    }
    });

    function voteMovie(movieId, isLike) {
        var url = isLike ? '/Customer/Home/LikeMovie' : '/Customer/Home/DislikeMovie';

        // Get anti-forgery token
        var token = document.querySelector('input[name="__RequestVerificationToken"]');
        var headers = {
            'Content-Type': 'application/x-www-form-urlencoded'
        };

        if (token) {
            headers['RequestVerificationToken'] = token.value;
        }

        // Create form data
        var formData = new URLSearchParams();
        formData.append('movieId', movieId);
        if (token) {
            formData.append('__RequestVerificationToken', token.value);
        }

        fetch(url, {
            method: 'POST',
            headers: headers,
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update counts
                document.getElementById('likeCount').textContent = data.likeCount;
                document.getElementById('dislikeCount').textContent = data.dislikeCount;

                // Update button states
                updateButtonStates(data.userVote);

                // Show message
                showVoteMessage(data.message, 'success');
            } else {
                showVoteMessage(data.message, 'danger');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showVoteMessage('An error occurred while processing your vote', 'danger');
        });
    }

    function updateButtonStates(userVote) {
        var likeBtn = document.getElementById('likeBtn');
        var dislikeBtn = document.getElementById('dislikeBtn');

        // Reset button states
        likeBtn.className = 'btn btn-outline-success d-flex align-items-center gap-2';
        dislikeBtn.className = 'btn btn-outline-danger d-flex align-items-center gap-2';

        // Apply active state based on user vote
        if (userVote === true) {
            likeBtn.className = 'btn btn-success d-flex align-items-center gap-2';
        } else if (userVote === false) {
            dislikeBtn.className = 'btn btn-danger d-flex align-items-center gap-2';
        }
    }

    function showVoteMessage(message, type) {
        var messageDiv = document.getElementById('voteMessage');
        messageDiv.className = `alert alert-${type}`;
        messageDiv.textContent = message;
        messageDiv.classList.remove('d-none');

        // Hide message after 3 seconds
        setTimeout(() => {
            messageDiv.classList.add('d-none');
        }, 3000);
    }

    // Update total price based on ticket count
    document.querySelector('input[name="Count"]').addEventListener('input', function() {
        var count = parseInt(this.value) || 0;
        var price = @Model.Movie.Price;
        var price5 = @Model.Movie.Price5;
        var price10 = @Model.Movie.Price10;

        var totalPrice;
        if (count >= 10) {
            totalPrice = count * price10;
        } else if (count >= 6) {
            totalPrice = count * price5;
        } else {
            totalPrice = count * price;
        }

        document.getElementById('totalPrice').textContent = '$' + totalPrice.toFixed(2);
    });
</script>