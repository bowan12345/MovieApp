// <auto-generated />
using BulkyWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MovieApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250416012939_addCategorytodb")]
    partial class addCategorytodb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Movies with high energy, physical stunts, and intense scenes.",
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Movies designed to make the audience laugh.",
                            DisplayOrder = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Serious, emotional storytelling with character development.",
                            DisplayOrder = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Futuristic or science-based themes, often with technology or space.",
                            DisplayOrder = 4,
                            Name = "Science Fiction"
                        });
                });

            modelBuilder.Entity("MovieApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "A thrilling journey through uncharted lands.",
                            Director = "John Smith",
                            Duration = 130,
                            ImageUrl = "",
                            ListPrice = 29.989999999999998,
                            Price = 24.989999999999998,
                            Price100 = 19.989999999999998,
                            Price50 = 22.989999999999998,
                            Rating = 8.1999999999999993,
                            Title = "The Great Adventure"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "A heartfelt romantic story set in Paris.",
                            Director = "Emily Johnson",
                            Duration = 115,
                            ImageUrl = "",
                            ListPrice = 24.989999999999998,
                            Price = 19.989999999999998,
                            Price100 = 15.99,
                            Price50 = 17.989999999999998,
                            Rating = 7.5,
                            Title = "Love in Paris"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Comedy that will leave you in stitches.",
                            Director = "Mike Chang",
                            Duration = 98,
                            ImageUrl = "",
                            ListPrice = 19.989999999999998,
                            Price = 15.99,
                            Price100 = 11.99,
                            Price50 = 13.99,
                            Rating = 7.7999999999999998,
                            Title = "The Laugh Factory"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "A science fiction epic exploring distant galaxies.",
                            Director = "Samantha Lee",
                            Duration = 145,
                            ImageUrl = "",
                            ListPrice = 34.990000000000002,
                            Price = 28.989999999999998,
                            Price100 = 23.989999999999998,
                            Price50 = 26.989999999999998,
                            Rating = 8.5999999999999996,
                            Title = "Beyond the Stars"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "A chilling horror story that will keep you up at night.",
                            Director = "Richard Black",
                            Duration = 105,
                            ImageUrl = "",
                            ListPrice = 22.989999999999998,
                            Price = 18.989999999999998,
                            Price100 = 14.99,
                            Price50 = 16.989999999999998,
                            Rating = 6.9000000000000004,
                            Title = "Haunted Echoes"
                        });
                });

            modelBuilder.Entity("MovieApp.Models.Movie", b =>
                {
                    b.HasOne("MovieApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
